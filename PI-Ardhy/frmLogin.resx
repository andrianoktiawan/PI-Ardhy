<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SZIi7939P8GwwaEi6mEqAAAAAElFTkSuQmCC
</value>
  </data>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>